import matplotlib.pyplot as plt
import numpy as np
from scipy.optimize import curve_fit
import math

from execute import execute

m_values = []
a_values = []
colors = ["r", "y", "g"]

methods = {
    0: "Conventionnelle",
    1: "Strassen",
    2: "Strassen avec Seuil"
}

def taux_moyen(x, y):
    somme = 0
    j = 0.
    for i in range(len(x) - 1):
        somme += (y[i+1] - y[i])/(x[i+1] - x[i])
        j += 1
    return round(somme/j)

def test_puissance(dataset):    
    for i in range(3):
        data = dataset[i]
        (x, y) = (np.log2(data[0]), np.log2(data[1]))

        # Calculate the slope and y-intercept of the regression line
        m = (np.mean(x) * np.mean(y) - np.mean(x * y)) / \
            (np.mean(x) ** 2 - np.mean(x ** 2)) 
        b = np.mean(y) - m * np.mean(x)

        m_values.append(m)
        a_values.append(b)   
        
        def predict(x, m, b):
            return m * x + b

    
    plt.scatter(x, y, color='blue')
    for i in range(3):
        plt.plot(x, predict(x, m_values[i], a_values[i]), color=colors[i],  linewidth=1.0, label=f"Methode {methods[i]}")
    plt.legend()
    plt.show()
    return

"""
def test_puissance(dataset):
    fig, axs = plt.subplots(3)
    fig.suptitle("Test de puissance")
    for i in range(3):
        data = dataset[i]
        (x, y) = np.log10(data[0]), np.log10(data[1])
        axs[i].plot(x, y, 'b-')
        axs[i].set_title(f"Methode {methods[i]}")
        #axs[i].xlabel('taille (log2)')
        #axs[i].ylabel('temps (log10)')
        m = taux_moyen(x, y)
        print(m)
        m_values.append(m)
        
    plt.show()
"""    
def calculate_y_values(x_values, y_values, m):
    new_y = []
    print(x_values)
    print(y_values)
    for x, y in zip(x_values, y_values):
        calculation = y/pow(x, m)
        new_y.append(calculation)
    return new_y

def test_rapport(dataset):    
    for i in range(3):
        data = dataset[i]
        new_y = calculate_y_values(data[0], data[1], m_values[i])   
        
        print("x", data[0])
        print("y", data[1])
        print("new_y", np.array(new_y))
        
        empty_array = np.arange(len(data[0]))
        limit = np.full_like(empty_array, a_values[i])
        
        plt.plot(data[0], limit, color="blue")
        plt.plot(data[0], new_y, colors[i]+ '--',  linewidth=1.0, label=f"Methode {methods[i]}")
    plt.legend()
    plt.show()


if __name__ == "__main__":
    data_set = {}

    for method in range(3):
        data_set[method]= []
        list_size= []
        list_times = []
        for size in range(3,7):
            sub_array = []
            for i in range(4):
                for j in range(4):
                    ex1, ex2 = (f"ex{size}_{i}", f"ex{size}_{j}")
                    time_execute = execute(ex1, ex2, method)
                    print(f"{ex1} {ex2} : {time_execute}")
                    sub_array.append(time_execute)
            list_size.append(2**size)
            list_times.append((sum(sub_array)/len(sub_array)))
        data_set[method] = (list_size, list_times)
    test_puissance(data_set)
    print(data_set)
    
    test_rapport(data_set)
"""
ex4_0 ex4_0 : 0.0034606456756591797
ex4_0 ex4_1 : 0.003326892852783203
ex4_0 ex4_2 : 0.003342151641845703
ex4_0 ex4_3 : 0.0033130645751953125
ex4_1 ex4_0 : 0.003452777862548828
ex4_1 ex4_1 : 0.0034608840942382812
ex4_1 ex4_2 : 0.0033240318298339844
ex4_1 ex4_3 : 0.0033631324768066406
ex4_2 ex4_0 : 0.0033600330352783203
ex4_2 ex4_1 : 0.0033321380615234375
ex4_2 ex4_2 : 0.003368854522705078
ex4_2 ex4_3 : 0.003406047821044922
ex4_3 ex4_0 : 0.003512144088745117
ex4_3 ex4_1 : 0.0035877227783203125
ex4_3 ex4_2 : 0.003322124481201172
ex4_3 ex4_3 : 0.003385782241821289
ex5_0 ex5_0 : 0.026700973510742188
ex5_0 ex5_1 : 0.02783679962158203
ex5_0 ex5_2 : 0.026726245880126953
ex5_0 ex5_3 : 0.02697610855102539
ex5_1 ex5_0 : 0.026919841766357422
ex5_1 ex5_1 : 0.0280301570892334
ex5_1 ex5_2 : 0.02656102180480957
ex5_1 ex5_3 : 0.027470827102661133
ex5_2 ex5_0 : 0.028084278106689453
ex5_2 ex5_1 : 0.026432037353515625
ex5_2 ex5_2 : 0.026560068130493164
ex5_2 ex5_3 : 0.027379989624023438
ex5_3 ex5_0 : 0.0266110897064209
ex5_3 ex5_1 : 0.027287006378173828
ex5_3 ex5_2 : 0.02632927894592285
ex5_3 ex5_3 : 0.027228832244873047
ex6_0 ex6_0 : 0.2107851505279541
ex6_0 ex6_1 : 0.20975494384765625
ex6_0 ex6_2 : 0.21088933944702148
ex6_0 ex6_3 : 0.21029400825500488
ex6_1 ex6_0 : 0.2108919620513916
ex6_1 ex6_1 : 0.21030020713806152
ex6_1 ex6_2 : 0.21146297454833984
ex6_1 ex6_3 : 0.21040606498718262
ex6_2 ex6_0 : 0.21230483055114746
ex6_2 ex6_1 : 0.21122360229492188
ex6_2 ex6_2 : 0.21060895919799805
ex6_2 ex6_3 : 0.2132871150970459
ex6_3 ex6_0 : 0.2115340232849121
ex6_3 ex6_1 : 0.21038103103637695
ex6_3 ex6_2 : 0.21020293235778809
ex6_3 ex6_3 : 0.20975112915039062
ex7_0 ex7_0 : 1.6755552291870117
ex7_0 ex7_1 : 1.6752448081970215
ex7_0 ex7_2 : 1.671769142150879
ex7_0 ex7_3 : 1.6714999675750732
ex7_1 ex7_0 : 1.6727027893066406
ex7_1 ex7_1 : 1.6760857105255127
ex7_1 ex7_2 : 1.6744236946105957
ex7_1 ex7_3 : 1.7442948818206787
ex7_2 ex7_0 : 1.835278034210205
ex7_2 ex7_1 : 1.8981807231903076
ex7_2 ex7_2 : 1.9494469165802002
ex7_2 ex7_3 : 1.784411907196045
ex7_3 ex7_0 : 1.774986982345581
ex7_3 ex7_1 : 1.7252957820892334
ex7_3 ex7_2 : 1.7123661041259766
ex7_3 ex7_3 : 1.778982162475586
ex8_0 ex8_0 : 14.112630128860474
ex8_0 ex8_1 : 15.2518949508667
ex8_0 ex8_2 : 14.19534707069397
ex8_0 ex8_3 : 14.037667036056519
ex8_1 ex8_0 : 13.92940902709961
ex8_1 ex8_1 : 13.975933074951172
ex8_1 ex8_2 : 14.19069790840149
ex8_1 ex8_3 : 15.35429310798645
ex8_2 ex8_0 : 14.394799947738647
ex8_2 ex8_1 : 13.946254014968872
ex8_2 ex8_2 : 14.211520910263062
ex8_2 ex8_3 : 13.817929029464722
ex8_3 ex8_0 : 15.538402080535889
ex8_3 ex8_1 : 14.807568073272705
ex8_3 ex8_2 : 14.87985897064209
ex8_3 ex8_3 : 14.797261714935303
ex4_0 ex4_0 : 0.0034902095794677734
ex4_0 ex4_1 : 0.003484964370727539
ex4_0 ex4_2 : 0.0038671493530273438
ex4_0 ex4_3 : 0.0034508705139160156
ex4_1 ex4_0 : 0.0033118724822998047
ex4_1 ex4_1 : 0.00390625
ex4_1 ex4_2 : 0.0033779144287109375
ex4_1 ex4_3 : 0.004010915756225586
ex4_2 ex4_0 : 0.0042569637298583984
ex4_2 ex4_1 : 0.005175113677978516
ex4_2 ex4_2 : 0.003626108169555664
ex4_2 ex4_3 : 0.004761934280395508
ex4_3 ex4_0 : 0.005838155746459961
ex4_3 ex4_1 : 0.004656076431274414
ex4_3 ex4_2 : 0.003860950469970703
ex4_3 ex4_3 : 0.004744052886962891
ex5_0 ex5_0 : 0.031466007232666016
ex5_0 ex5_1 : 0.029022932052612305
ex5_0 ex5_2 : 0.02822113037109375
ex5_0 ex5_3 : 0.02753305435180664
ex5_1 ex5_0 : 0.032877206802368164
ex5_1 ex5_1 : 0.02907419204711914
ex5_1 ex5_2 : 0.028218746185302734
ex5_1 ex5_3 : 0.02761697769165039
ex5_2 ex5_0 : 0.02782607078552246
ex5_2 ex5_1 : 0.05684518814086914
ex5_2 ex5_2 : 0.030047893524169922
ex5_2 ex5_3 : 0.03263092041015625
ex5_3 ex5_0 : 0.03459787368774414
ex5_3 ex5_1 : 0.028291702270507812
ex5_3 ex5_2 : 0.02834486961364746
ex5_3 ex5_3 : 0.02847003936767578
ex6_0 ex6_0 : 0.2275390625
ex6_0 ex6_1 : 0.22815990447998047
ex6_0 ex6_2 : 0.26646995544433594
ex6_0 ex6_3 : 0.23802685737609863
ex6_1 ex6_0 : 0.25006914138793945
ex6_1 ex6_1 : 0.22608113288879395
ex6_1 ex6_2 : 0.2246079444885254
ex6_1 ex6_3 : 0.23031401634216309
ex6_2 ex6_0 : 0.24459481239318848
ex6_2 ex6_1 : 0.23662304878234863
ex6_2 ex6_2 : 0.22887301445007324
ex6_2 ex6_3 : 0.23563480377197266
ex6_3 ex6_0 : 0.22243881225585938
ex6_3 ex6_1 : 0.23279476165771484
ex6_3 ex6_2 : 0.2267930507659912
ex6_3 ex6_3 : 0.2311081886291504
ex7_0 ex7_0 : 1.8456909656524658
ex7_0 ex7_1 : 1.8420460224151611
ex7_0 ex7_2 : 1.7999699115753174
ex7_0 ex7_3 : 1.8224341869354248
ex7_1 ex7_0 : 1.803765058517456
ex7_1 ex7_1 : 1.814418077468872
ex7_1 ex7_2 : 1.8442606925964355
ex7_1 ex7_3 : 1.8622689247131348
ex7_2 ex7_0 : 1.8315770626068115
ex7_2 ex7_1 : 1.9063630104064941
ex7_2 ex7_2 : 1.853376865386963
ex7_2 ex7_3 : 1.8723759651184082
ex7_3 ex7_0 : 1.8249609470367432
ex7_3 ex7_1 : 1.834338903427124
ex7_3 ex7_2 : 1.8280861377716064
ex7_3 ex7_3 : 1.8130850791931152
ex8_0 ex8_0 : 14.608484983444214
ex8_0 ex8_1 : 14.580985307693481
ex8_0 ex8_2 : 14.498684167861938
ex8_0 ex8_3 : 14.520565032958984
ex8_1 ex8_0 : 13.739566087722778
ex8_1 ex8_1 : 15.083562135696411
ex8_1 ex8_2 : 14.337402820587158
ex8_1 ex8_3 : 14.769150018692017
ex8_2 ex8_0 : 14.233542203903198
ex8_2 ex8_1 : 14.437333106994629
ex8_2 ex8_2 : 14.367301940917969
ex8_2 ex8_3 : 14.227030038833618
ex8_3 ex8_0 : 14.669182300567627
ex8_3 ex8_1 : 14.680163145065308
ex8_3 ex8_2 : 15.058830738067627
ex8_3 ex8_3 : 15.063263177871704
ex4_0 ex4_0 : 0.003312826156616211
ex4_0 ex4_1 : 0.0034780502319335938
ex4_0 ex4_2 : 0.0033860206604003906
ex4_0 ex4_3 : 0.0034728050231933594
ex4_1 ex4_0 : 0.0034008026123046875
ex4_1 ex4_1 : 0.0032880306243896484
ex4_1 ex4_2 : 0.0033850669860839844
ex4_1 ex4_3 : 0.003364086151123047
ex4_2 ex4_0 : 0.0033299922943115234
ex4_2 ex4_1 : 0.0034399032592773438
ex4_2 ex4_2 : 0.003729104995727539
ex4_2 ex4_3 : 0.00345611572265625
ex4_3 ex4_0 : 0.0034799575805664062
ex4_3 ex4_1 : 0.0033097267150878906
ex4_3 ex4_2 : 0.0040090084075927734
ex4_3 ex4_3 : 0.003495931625366211
ex5_0 ex5_0 : 0.029211759567260742
ex5_0 ex5_1 : 0.02715921401977539
ex5_0 ex5_2 : 0.028069257736206055
ex5_0 ex5_3 : 0.027234792709350586
ex5_1 ex5_0 : 0.027195215225219727
ex5_1 ex5_1 : 0.027022123336791992
ex5_1 ex5_2 : 0.027369976043701172
ex5_1 ex5_3 : 0.02821493148803711
ex5_2 ex5_0 : 0.02697920799255371
ex5_2 ex5_1 : 0.027605056762695312
ex5_2 ex5_2 : 0.026870012283325195
ex5_2 ex5_3 : 0.027744054794311523
ex5_3 ex5_0 : 0.02762007713317871
ex5_3 ex5_1 : 0.026913166046142578
ex5_3 ex5_2 : 0.02783489227294922
ex5_3 ex5_3 : 0.026961326599121094
ex6_0 ex6_0 : 0.21734619140625
ex6_0 ex6_1 : 0.21536898612976074
ex6_0 ex6_2 : 0.21353387832641602
ex6_0 ex6_3 : 0.21355915069580078
ex6_1 ex6_0 : 0.21286296844482422
ex6_1 ex6_1 : 0.21295380592346191
ex6_1 ex6_2 : 0.2105698585510254
ex6_1 ex6_3 : 0.21065402030944824
ex6_2 ex6_0 : 0.21379518508911133
ex6_2 ex6_1 : 0.2115797996520996
ex6_2 ex6_2 : 0.21134495735168457
ex6_2 ex6_3 : 0.21227693557739258
ex6_3 ex6_0 : 0.21127581596374512
ex6_3 ex6_1 : 0.21689796447753906
ex6_3 ex6_2 : 0.22381091117858887
ex6_3 ex6_3 : 0.22676682472229004
ex7_0 ex7_0 : 1.7635600566864014
ex7_0 ex7_1 : 1.7345499992370605
ex7_0 ex7_2 : 1.7472119331359863
ex7_0 ex7_3 : 1.734604835510254
ex7_1 ex7_0 : 1.7034580707550049
ex7_1 ex7_1 : 1.8377668857574463
ex7_1 ex7_2 : 1.7967100143432617
ex7_1 ex7_3 : 1.8803339004516602
ex7_2 ex7_0 : 1.8044018745422363
ex7_2 ex7_1 : 1.760547161102295
ex7_2 ex7_2 : 1.9525132179260254
ex7_2 ex7_3 : 1.7567570209503174
ex7_3 ex7_0 : 1.723552942276001
ex7_3 ex7_1 : 1.6974141597747803
ex7_3 ex7_2 : 1.720170021057129
ex7_3 ex7_3 : 1.6944010257720947
ex8_0 ex8_0 : 13.494453191757202
ex8_0 ex8_1 : 13.855279922485352
ex8_0 ex8_2 : 13.919224977493286
ex8_0 ex8_3 : 13.621329307556152
ex8_1 ex8_0 : 13.958529949188232
ex8_1 ex8_1 : 13.96981930732727
ex8_1 ex8_2 : 13.757463693618774
ex8_1 ex8_3 : 13.558393955230713
ex8_2 ex8_0 : 13.842720985412598
ex8_2 ex8_1 : 13.996328830718994
ex8_2 ex8_2 : 14.119704723358154
ex8_2 ex8_3 : 13.674046039581299
ex8_3 ex8_0 : 13.710657119750977
ex8_3 ex8_1 : 13.605031967163086
ex8_3 ex8_2 : 13.375433921813965
ex8_3 ex8_3 : 14.394776821136475
"""
    
